{
  "test_date": "2025-06-23T00:40:14.776561",
  "requested_models": [
    "mistral:7b",
    "mistral-nemo:12b",
    "qwen2.5:7b",
    "qwen2.5:14b",
    "qwq:32b",
    "granite3-dense:8b",
    "granite3.1-moe:3b",
    "granite3.3:8b-largectx",
    "phi4:14b"
  ],
  "available_models": [
    "mistral:7b",
    "granite3.3:8b-largectx",
    "phi4:14b",
    "granite3.3:8b",
    "qwen2.5-coder:7b",
    "codeqwen:7b",
    "granite-code:8b",
    "deepseek-coder:1.3b",
    "llama3.2:3b"
  ],
  "missing_models": {
    "mistral-nemo:12b": "Not installed",
    "qwen2.5:7b": "Use qwen2.5-coder:7b instead",
    "qwen2.5:14b": "Not installed",
    "qwq:32b": "Not installed",
    "granite3-dense:8b": "Use granite3.3:8b instead",
    "granite3.1-moe:3b": "Not installed"
  },
  "total_models_tested": 9,
  "total_queries": 27,
  "total_execution_time": 2001.3638262748718,
  "overall_baseline_success_rate": 23.045267489711936,
  "overall_improved_success_rate": 25.514403292181072,
  "overall_improvement": 2.4691358024691357,
  "model_results": [
    {
      "model": "mistral:7b",
      "available": true,
      "baseline_success_rate": 22.22222222222222,
      "improved_success_rate": 29.629629629629626,
      "improvement_percentage": 7.4074074074074066,
      "baseline_results": [
        {
          "query": "Who is the CTO?",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.030618906021118,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "List all teams in the engineering department",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017090797424316,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": "MATCH (n:Node {name:'Maintenance'})-[:REQUIRES]->(p:Process)\nWHERE p.priority = 'High'\nRETURN n.id AS node_id, p.id AS process_id, n.name AS node_name, p.name AS process_name, n.status AS node_status, p.status AS process_status\nORDER BY node_status, process_status DESC",
          "generation_time": 3.923788070678711,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": "MATCH (n:Node {name:'Maintenance'})-[:REQUIRES]->(s:Service) WHERE s.status = 'critical' AND n.location IN ['APAC', 'EMEA'] RETURN n.name, s.name, n.location, s.status",
          "generation_time": 3.309069871902466,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.928728103637695,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": "MATCH (n:Node {name:'Server'})-[:CONNECTED_TO]->(m:Node) WHERE n.status = 'critical' AND m.status = 'normal' RETURN n, m",
          "generation_time": 2.961289405822754,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "How many people work in each department?",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.015993356704712,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.020108461380005,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": "MATCH (n:Node {name:'Server'})-[:CONNECTED_TO]->(m:Node) WHERE m.status = 'Down' RETURN n, m",
          "generation_time": 4.611462116241455,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017699241638184,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01759672164917,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018254995346069,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": "MATCH (n:Node)-[:IS_LOCATED_IN]->(l:Location) WHERE l.timezone IN [\"Asia/Tokyo\", \"Australia/*\"] OR l.region = \"APAC\" RETURN n.name, n.type, collect(DISTINCT l.timezone) as timezones, count(DISTINCT l) as location_count",
          "generation_time": 4.8444812297821045,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018584966659546,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01761531829834,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.020679235458374,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019697427749634,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018465518951416,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me the important people",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.015790939331055,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": "MATCH (n:Node)-[:IS_LOCATED_IN]->(l:Location) WHERE l.name = 'APAC' RETURN n;",
          "generation_time": 4.3493359088897705,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.015745401382446,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01524806022644,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0173749923706055,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018272638320923,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.021482706069946,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016287088394165,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find team leads",
          "model": "mistral:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.014955282211304,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        }
      ],
      "improved_results": [
        {
          "query": "Who is the CTO?",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 0.07505607604980469,
          "generation_error": "HTTP 500",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 0.07505607604980469
          }
        },
        {
          "query": "List all teams in the engineering department",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": "MATCH (n:Node {name:'Maintenance'})-[:REQUIRES]->(s:Service)\nWHERE s.status = 'critical' OR s.status = 'high'\nRETURN n.name AS maintenance_needed, collect(s.name) AS services_affected",
          "processed_query": "MATCH (n:Node {name:'Maintenance'})-[:REQUIRES]->(s:Service)\nWHERE s.status = 'critical' OR s.status = 'high'\nRETURN n.name AS maintenance_needed, collect(s.name) AS services_affected",
          "generation_time": 3.4721927642822266,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: s"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (n:Node {name:'Maintenance'})-[:REQUIRES]->(s:Service)\nWHERE s.status = 'critical' OR s.status = 'high'\nRETURN n.name AS maintenance_needed, collect(s.name) AS services_affected",
            "processed_query": "",
            "execution_time": 0.0031125545501708984,
            "generation_time": 3.4721927642822266
          }
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": "MATCH (n:Node)-[:IS_LOCATED_IN]->(l:Location) WHERE l.timezone IN [\"Asia/Tokyo\", \"Australia/*\"] OR l.region = \"APAC\" RETURN n.name, n.type, collect(DISTINCT l.timezone) as timezones, count(DISTINCT l) as location_count ORDER BY location_count DESC",
          "processed_query": "MATCH (n:Node)-[:IS_LOCATED_IN]->(l:Location) WHERE l.timezone IN [\"Asia/Tokyo\", \"Australia/*\"] OR l.region = \"APAC\" RETURN n.name, n.type, collect(DISTINCT l.timezone) as timezones, count(DISTINCT l) as location_count ORDER BY location_count DESC",
          "generation_time": 3.9223713874816895,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: l"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (n:Node)-[:IS_LOCATED_IN]->(l:Location) WHERE l.timezone IN [\"Asia/Tokyo\", \"Australia/*\"] OR l.region = \"APAC\" RETURN n.name, n.type, collect(DISTINCT l.timezone) as timezones, count(DISTINCT l) as location_count ORDER BY location_count DESC",
            "processed_query": "",
            "execution_time": 0.002780914306640625,
            "generation_time": 3.9223713874816895
          }
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": "MATCH (n:Node {name:'Server'})-[:CONNECTED_TO]->(m:Node) WHERE n.status = 'critical' AND m.status = 'warning' RETURN n, m",
          "processed_query": "MATCH (n:Node {name:'Server'})-[:CONNECTED_TO]->(m:Node) WHERE n.status = 'critical' AND m.status = 'warning' RETURN n, m",
          "generation_time": 2.9833290576934814,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: m"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (n:Node {name:'Server'})-[:CONNECTED_TO]->(m:Node) WHERE n.status = 'critical' AND m.status = 'warning' RETURN n, m",
            "processed_query": "",
            "execution_time": 0.0015003681182861328,
            "generation_time": 2.9833290576934814
          }
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": "MATCH (n:Node {name:'Maintenance'})-[:REQUIRES]->(s:Service)\nWHERE s.status = 'critical'\nRETURN n.id, s.id, n.name as maintenance_task, s.name as service, s.status as service_status\nORDER BY service_status DESC",
          "processed_query": "MATCH (n:Node {name:'Maintenance'})-[:REQUIRES]->(s:Service)\nWHERE s.status = 'critical'\nRETURN n.id, s.id, n.name as maintenance_task, s.name as service, s.status as service_status\nORDER BY service_status DESC",
          "generation_time": 3.5201416015625,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: s"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (n:Node {name:'Maintenance'})-[:REQUIRES]->(s:Service)\nWHERE s.status = 'critical'\nRETURN n.id, s.id, n.name as maintenance_task, s.name as service, s.status as service_status\nORDER BY service_status DESC",
            "processed_query": "",
            "execution_time": 0.0022668838500976562,
            "generation_time": 3.5201416015625
          }
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": "MATCH (n:Node {name:'Maintenance'})-[:REQUIRES]->(s:Service)\nWHERE s.status = 'critical' OR s.status = 'high'\nRETURN n.name AS maintenance_needed, collect(s.name) AS services_affected",
          "processed_query": "MATCH (n:Node {name:'Maintenance'})-[:REQUIRES]->(s:Service)\nWHERE s.status = 'critical' OR s.status = 'high'\nRETURN n.name AS maintenance_needed, collect(s.name) AS services_affected",
          "generation_time": 3.3511288166046143,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: s"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (n:Node {name:'Maintenance'})-[:REQUIRES]->(s:Service)\nWHERE s.status = 'critical' OR s.status = 'high'\nRETURN n.name AS maintenance_needed, collect(s.name) AS services_affected",
            "processed_query": "",
            "execution_time": 0.0013053417205810547,
            "generation_time": 3.3511288166046143
          }
        },
        {
          "query": "How many people work in each department?",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": "MATCH (n:Node {name:'Server'})-[:CONNECTED_TO]->(m:Node) WHERE n.status = 'critical' AND m.status = 'non-critical' RETURN n, m",
          "processed_query": "MATCH (n:Node {name:'Server'})-[:CONNECTED_TO]->(m:Node) WHERE n.status = 'critical' AND m.status = 'non-critical' RETURN n, m",
          "generation_time": 3.0031683444976807,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: m"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (n:Node {name:'Server'})-[:CONNECTED_TO]->(m:Node) WHERE n.status = 'critical' AND m.status = 'non-critical' RETURN n, m",
            "processed_query": "",
            "execution_time": 0.0016837120056152344,
            "generation_time": 3.0031683444976807
          }
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": "MATCH (n:Node)-[:IS_CONNECTED_TO]->(m:Node) WHERE n.location = 'APAC' AND m.location = 'EMEA' OR m.location = 'Americas' RETURN n, m",
          "processed_query": "MATCH (n:Node)-[:IS_CONNECTED_TO]->(m:Node) WHERE n.location = 'APAC' AND m.location = 'EMEA' OR m.location = 'Americas' RETURN n, m",
          "generation_time": 5.241026878356934,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: m"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (n:Node)-[:IS_CONNECTED_TO]->(m:Node) WHERE n.location = 'APAC' AND m.location = 'EMEA' OR m.location = 'Americas' RETURN n, m",
            "processed_query": "",
            "execution_time": 0.001598358154296875,
            "generation_time": 5.241026878356934
          }
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.022170782089233,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.022170782089233
          }
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": "MATCH (n:Node {name:'Server'})-[:CONNECTED_TO]->(m:Node) WHERE m.status = 'Down' RETURN n, m",
          "processed_query": "MATCH (n:Node {name:'Server'})-[:CONNECTED_TO]->(m:Node) WHERE m.status = 'Down' RETURN n, m",
          "generation_time": 4.604639053344727,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: m"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (n:Node {name:'Server'})-[:CONNECTED_TO]->(m:Node) WHERE m.status = 'Down' RETURN n, m",
            "processed_query": "",
            "execution_time": 0.001233816146850586,
            "generation_time": 4.604639053344727
          }
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.905672073364258,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.905672073364258
          }
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018347263336182,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018347263336182
          }
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.016395807266235,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.016395807266235
          }
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.90749454498291,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.90749454498291
          }
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.017597198486328,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.017597198486328
          }
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0184245109558105,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0184245109558105
          }
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.923302888870239,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.923302888870239
          }
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018724203109741,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018724203109741
          }
        },
        {
          "query": "Show me the important people",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.01761269569397,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.01761269569397
          }
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.915496110916138,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.915496110916138
          }
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.014949798583984,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.014949798583984
          }
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.014976501464844,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.014976501464844
          }
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.905991315841675,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.905991315841675
          }
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018616437911987,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018616437911987
          }
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.019073009490967,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.019073009490967
          }
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.908863544464111,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.908863544464111
          }
        },
        {
          "query": "Find team leads",
          "model": "mistral:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.019219398498535,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.019219398498535
          }
        }
      ],
      "timestamp": "2025-06-23T00:11:09.632783"
    },
    {
      "model": "granite3.3:8b-largectx",
      "available": true,
      "baseline_success_rate": 0.0,
      "improved_success_rate": 0.0,
      "improvement_percentage": 0.0,
      "baseline_results": [
        {
          "query": "Who is the CTO?",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016361713409424,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "List all teams in the engineering department",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0195207595825195,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017919540405273,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017773866653442,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017074108123779,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0153117179870605,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "How many people work in each department?",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.015186786651611,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.022487163543701,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016039609909058,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01779580116272,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.020267724990845,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018322467803955,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.024928092956543,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01789927482605,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.014993906021118,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01423192024231,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019684553146362,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0174055099487305,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me the important people",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018134832382202,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01546311378479,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01865291595459,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.015744209289551,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.022267580032349,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.014921188354492,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016969680786133,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0183117389678955,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find team leads",
          "model": "granite3.3:8b-largectx",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016358852386475,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        }
      ],
      "improved_results": [
        {
          "query": "Who is the CTO?",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.01557731628418,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.01557731628418
          }
        },
        {
          "query": "List all teams in the engineering department",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.919562101364136,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.919562101364136
          }
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.016354560852051,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.016354560852051
          }
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0160698890686035,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0160698890686035
          }
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.930742025375366,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.930742025375366
          }
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.015010833740234,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.015010833740234
          }
        },
        {
          "query": "How many people work in each department?",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.017165422439575,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.017165422439575
          }
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.902748346328735,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.902748346328735
          }
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.015953063964844,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.015953063964844
          }
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.017456531524658,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.017456531524658
          }
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.917218208312988,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.917218208312988
          }
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.020326852798462,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.020326852798462
          }
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018506765365601,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018506765365601
          }
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.9239726066589355,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.9239726066589355
          }
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.016560792922974,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.016560792922974
          }
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0143678188323975,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0143678188323975
          }
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.943111419677734,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.943111419677734
          }
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.019132137298584,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.019132137298584
          }
        },
        {
          "query": "Show me the important people",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.016851186752319,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.016851186752319
          }
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.9049811363220215,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.9049811363220215
          }
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.015054702758789,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.015054702758789
          }
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.016445875167847,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.016445875167847
          }
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.919798135757446,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.919798135757446
          }
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.016246795654297,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.016246795654297
          }
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.017798900604248,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.017798900604248
          }
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.9295618534088135,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.9295618534088135
          }
        },
        {
          "query": "Find team leads",
          "model": "granite3.3:8b-largectx",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018131256103516,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018131256103516
          }
        }
      ],
      "timestamp": "2025-06-23T00:15:48.744346"
    },
    {
      "model": "phi4:14b",
      "available": true,
      "baseline_success_rate": 0.0,
      "improved_success_rate": 0.0,
      "improvement_percentage": 0.0,
      "baseline_results": [
        {
          "query": "Who is the CTO?",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018707990646362,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "List all teams in the engineering department",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016271352767944,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01776909828186,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018839359283447,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018477439880371,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019543647766113,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "How many people work in each department?",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017006874084473,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016533851623535,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016592264175415,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.020021438598633,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0204925537109375,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.015345573425293,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017115354537964,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017272233963013,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018286943435669,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018790006637573,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018472671508789,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.022024631500244,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me the important people",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.014572620391846,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.020164966583252,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.014176845550537,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018625020980835,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0172553062438965,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.026743650436401,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.02389669418335,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.014540672302246,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find team leads",
          "model": "phi4:14b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018989562988281,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        }
      ],
      "improved_results": [
        {
          "query": "Who is the CTO?",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.017664432525635,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.017664432525635
          }
        },
        {
          "query": "List all teams in the engineering department",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.938129663467407,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.938129663467407
          }
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0173845291137695,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0173845291137695
          }
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.021317720413208,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.021317720413208
          }
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.905921220779419,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.905921220779419
          }
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0160932540893555,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0160932540893555
          }
        },
        {
          "query": "How many people work in each department?",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.016157865524292,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.016157865524292
          }
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.92524528503418,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.92524528503418
          }
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.01747727394104,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.01747727394104
          }
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.019030570983887,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.019030570983887
          }
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.929738521575928,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.929738521575928
          }
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0185205936431885,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0185205936431885
          }
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.017586708068848,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.017586708068848
          }
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.9334259033203125,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.9334259033203125
          }
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.019355297088623,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.019355297088623
          }
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018247604370117,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018247604370117
          }
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.916849136352539,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.916849136352539
          }
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0177576541900635,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0177576541900635
          }
        },
        {
          "query": "Show me the important people",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018296480178833,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018296480178833
          }
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.924007415771484,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.924007415771484
          }
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018507957458496,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018507957458496
          }
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.013630390167236,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.013630390167236
          }
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.939115524291992,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.939115524291992
          }
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.026923894882202,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.026923894882202
          }
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.015801668167114,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.015801668167114
          }
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.931011915206909,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.931011915206909
          }
        },
        {
          "query": "Find team leads",
          "model": "phi4:14b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.02009129524231,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.02009129524231
          }
        }
      ],
      "timestamp": "2025-06-23T00:20:27.948096"
    },
    {
      "model": "granite3.3:8b",
      "available": true,
      "baseline_success_rate": 0.0,
      "improved_success_rate": 0.0,
      "improvement_percentage": 0.0,
      "baseline_results": [
        {
          "query": "Who is the CTO?",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019205093383789,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "List all teams in the engineering department",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019079923629761,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.021778345108032,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.021623611450195,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.022221088409424,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.020573854446411,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "How many people work in each department?",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.023392915725708,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.023298978805542,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0212225914001465,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.021677255630493,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.024754047393799,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0231077671051025,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.026173114776611,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018386602401733,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018325328826904,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01440954208374,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019501209259033,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0206029415130615,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me the important people",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016263246536255,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019362211227417,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.023270130157471,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018545389175415,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018080949783325,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017450571060181,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017862796783447,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016791343688965,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find team leads",
          "model": "granite3.3:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018950939178467,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        }
      ],
      "improved_results": [
        {
          "query": "Who is the CTO?",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018970251083374,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018970251083374
          }
        },
        {
          "query": "List all teams in the engineering department",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.924275159835815,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.924275159835815
          }
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.02083420753479,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.02083420753479
          }
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0257182121276855,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0257182121276855
          }
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.9412078857421875,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.9412078857421875
          }
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.02068018913269,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.02068018913269
          }
        },
        {
          "query": "How many people work in each department?",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.022884368896484,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.022884368896484
          }
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.941331148147583,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.941331148147583
          }
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.016893148422241,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.016893148422241
          }
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.022403240203857,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.022403240203857
          }
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.935730934143066,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.935730934143066
          }
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018518447875977,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018518447875977
          }
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.021888732910156,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.021888732910156
          }
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.9219207763671875,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.9219207763671875
          }
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.017781972885132,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.017781972885132
          }
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.01945424079895,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.01945424079895
          }
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.936892032623291,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.936892032623291
          }
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.015815734863281,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.015815734863281
          }
        },
        {
          "query": "Show me the important people",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018802642822266,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018802642822266
          }
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.9416115283966064,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.9416115283966064
          }
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0181944370269775,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0181944370269775
          }
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0179057121276855,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0179057121276855
          }
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.932576417922974,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.932576417922974
          }
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018260717391968,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018260717391968
          }
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.015202760696411,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.015202760696411
          }
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.932301044464111,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.932301044464111
          }
        },
        {
          "query": "Find team leads",
          "model": "granite3.3:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018228054046631,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018228054046631
          }
        }
      ],
      "timestamp": "2025-06-23T00:25:07.284945"
    },
    {
      "model": "qwen2.5-coder:7b",
      "available": true,
      "baseline_success_rate": 11.11111111111111,
      "improved_success_rate": 22.22222222222222,
      "improvement_percentage": 11.11111111111111,
      "baseline_results": [
        {
          "query": "Who is the CTO?",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019065856933594,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "List all teams in the engineering department",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.023868560791016,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 4.650852680206299,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3527135848999023,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.356919765472412,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3441028594970703,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "How many people work in each department?",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3506693840026855,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 4.265456676483154,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.358750820159912,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3623621463775635,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3489904403686523,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3472609519958496,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3660521507263184,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3393607139587402,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.338848829269409,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3503623008728027,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 4.311331510543823,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3755085468292236,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Show me the important people",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.300032138824463,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.349780797958374,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.351128578186035,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3506832122802734,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.349026679992676,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 2.8362035751342773,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.348388910293579,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3558528423309326,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        },
        {
          "query": "Find team leads",
          "model": "qwen2.5-coder:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 4.954103946685791,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0
        }
      ],
      "improved_results": [
        {
          "query": "Who is the CTO?",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 0.16058945655822754,
          "generation_error": "HTTP 500",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 0.16058945655822754
          }
        },
        {
          "query": "List all teams in the engineering department",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 0.21346497535705566,
          "generation_error": "HTTP 500",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 0.21346497535705566
          }
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.766481399536133,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0020415782928466797,
            "generation_time": 3.766481399536133
          }
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 2.8308401107788086,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0014002323150634766,
            "generation_time": 2.8308401107788086
          }
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3545737266540527,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.001524209976196289,
            "generation_time": 3.3545737266540527
          }
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.350827693939209,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0016002655029296875,
            "generation_time": 3.350827693939209
          }
        },
        {
          "query": "How many people work in each department?",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz = 'Asia/Tokyo') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz = 'Asia/Tokyo') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, labels(c) as labels LIMIT 25",
          "generation_time": 3.1217710971832275,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz = 'Asia/Tokyo') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0016579627990722656,
            "generation_time": 3.1217710971832275
          }
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz = 'Asia/Tokyo') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz = 'Asia/Tokyo') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, labels(c) as labels LIMIT 25",
          "generation_time": 3.1238608360290527,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz = 'Asia/Tokyo') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0012040138244628906,
            "generation_time": 3.1238608360290527
          }
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3550519943237305,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0012252330780029297,
            "generation_time": 3.3550519943237305
          }
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 2.8276538848876953,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0014333724975585938,
            "generation_time": 2.8276538848876953
          }
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3538122177124023,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.001251220703125,
            "generation_time": 3.3538122177124023
          }
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 4.27854585647583,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0014371871948242188,
            "generation_time": 4.27854585647583
          }
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3506879806518555,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0012547969818115234,
            "generation_time": 3.3506879806518555
          }
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3520426750183105,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.001329183578491211,
            "generation_time": 3.3520426750183105
          }
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3403449058532715,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0016601085662841797,
            "generation_time": 3.3403449058532715
          }
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3520267009735107,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.001561880111694336,
            "generation_time": 3.3520267009735107
          }
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 2.860159158706665,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0013363361358642578,
            "generation_time": 2.860159158706665
          }
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 2.8168187141418457,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0013501644134521484,
            "generation_time": 2.8168187141418457
          }
        },
        {
          "query": "Show me the important people",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3273980617523193,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0011284351348876953,
            "generation_time": 3.3273980617523193
          }
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.352388620376587,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0010933876037597656,
            "generation_time": 3.352388620376587
          }
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.7784061431884766,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0011415481567382812,
            "generation_time": 3.7784061431884766
          }
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3578357696533203,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.001348733901977539,
            "generation_time": 3.3578357696533203
          }
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz = 'Asia/Tokyo') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz = 'Asia/Tokyo') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, labels(c) as labels LIMIT 25",
          "generation_time": 3.121981143951416,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz = 'Asia/Tokyo') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0010564327239990234,
            "generation_time": 3.121981143951416
          }
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 2.834564447402954,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0011725425720214844,
            "generation_time": 2.834564447402954
          }
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.349203109741211,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0011980533599853516,
            "generation_time": 3.349203109741211
          }
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 4.270700693130493,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.001176595687866211,
            "generation_time": 4.270700693130493
          }
        },
        {
          "query": "Find team leads",
          "model": "qwen2.5-coder:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "processed_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
          "generation_time": 3.3027336597442627,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {primary_region: 'APAC'}) WHERE ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/' OR tz STARTS WITH 'Australia/') RETURN c.id, c.name, c.support_tier, c.primary_region, c.time_zone_preferences, c.active_users, labels(c) as labels LIMIT 25",
            "processed_query": "",
            "execution_time": 0.0012023448944091797,
            "generation_time": 3.3027336597442627
          }
        }
      ],
      "timestamp": "2025-06-23T00:28:08.957280"
    },
    {
      "model": "codeqwen:7b",
      "available": true,
      "baseline_success_rate": 11.11111111111111,
      "improved_success_rate": 7.4074074074074066,
      "improvement_percentage": -3.7037037037037033,
      "baseline_results": [
        {
          "query": "Who is the CTO?",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017170190811157,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "List all teams in the engineering department",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.022170066833496,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client) WHERE c.data_volume_gb > 10000 RETURN c.id, c.name, c.industry, c.data_volume_gb, c.support_tier, c.primary_region, labels(c) AS labels ORDER BY c.data_volume_gb DESC",
          "generation_time": 1.7451412677764893,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 14
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0181779861450195,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018253564834595,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017514705657959,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "How many people work in each department?",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016147613525391,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017282485961914,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:SUPPORTS_REGION]->(t:Team) RETURN c.name AS customer, t.name AS team, labels(c) AS labels",
          "generation_time": 4.480421781539917,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.015575647354126,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.013406038284302,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017346620559692,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.013363599777222,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01603364944458,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01490044593811,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018041372299194,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018613338470459,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017597675323486,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me the important people",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0190253257751465,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:SUPPORTS_REGION]->(t:Team) RETURN c.name AS client, t.name AS team",
          "generation_time": 4.35040020942688,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018291473388672,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0188634395599365,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.013566970825195,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018019437789917,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018228769302368,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0160298347473145,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find team leads",
          "model": "codeqwen:7b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.013780117034912,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        }
      ],
      "improved_results": [
        {
          "query": "Who is the CTO?",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 0.20592904090881348,
          "generation_error": "HTTP 500",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 0.20592904090881348
          }
        },
        {
          "query": "List all teams in the engineering department",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.01867938041687,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.01867938041687
          }
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.943511009216309,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.943511009216309
          }
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {tier: 'strategic'}) RETURN c.primary_region AS region, c.id AS client_id, c.name AS client_name, c.mrr AS monthly_revenue, c.annual_value AS annual_revenue, c.industry AS industry",
          "processed_query": "MATCH (c:Client {tier: 'strategic'}) RETURN c.primary_region AS region, c.id AS client_id, c.name AS client_name, c.mrr AS monthly_revenue, c.annual_value AS annual_revenue, c.industry AS industry",
          "generation_time": 4.3878173828125,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {tier: 'strategic'}) RETURN c.primary_region AS region, c.id AS client_id, c.name AS client_name, c.mrr AS monthly_revenue, c.annual_value AS annual_revenue, c.industry AS industry",
            "processed_query": "",
            "execution_time": 0.001642465591430664,
            "generation_time": 4.3878173828125
          }
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0209455490112305,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0209455490112305
          }
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.955292224884033,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.955292224884033
          }
        },
        {
          "query": "How many people work in each department?",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0154454708099365,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0154454708099365
          }
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018650531768799,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018650531768799
          }
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.962570905685425,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.962570905685425
          }
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.016906023025513,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.016906023025513
          }
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.016275644302368,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.016275644302368
          }
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:SUPPORTS_REGION]->(t:Team) RETURN c.name AS customer, t.name AS team, labels(c) AS labels, labels(t) AS labels",
          "processed_query": "MATCH (c:Client)-[:SUPPORTS_REGION]->(t:Team) RETURN c.name AS customer, t.name AS team, labels(c) AS labels, labels(t) AS labels",
          "generation_time": 5.546896457672119,
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "Error: Multiple result columns with the same name are not supported.",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:SUPPORTS_REGION]->(t:Team) RETURN c.name AS customer, t.name AS team, labels(c) AS labels, labels(t) AS labels",
            "processed_query": "",
            "execution_time": 0.0010907649993896484,
            "generation_time": 5.546896457672119
          }
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.014744520187378,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.014744520187378
          }
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.016511678695679,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.016511678695679
          }
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.942488670349121,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.942488670349121
          }
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.017958641052246,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.017958641052246
          }
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0180652141571045,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0180652141571045
          }
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.95888352394104,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.95888352394104
          }
        },
        {
          "query": "Show me the important people",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.017016172409058,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.017016172409058
          }
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0188188552856445,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0188188552856445
          }
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.98649001121521,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.98649001121521
          }
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0182507038116455,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0182507038116455
          }
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018492937088013,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018492937088013
          }
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.940189361572266,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.940189361572266
          }
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:SUPPORTS_REGION]->(t:Team) RETURN c.name AS customer, t.name AS team",
          "processed_query": "MATCH (c:Client)-[:SUPPORTS_REGION]->(t:Team) RETURN c.name AS customer, t.name AS team",
          "generation_time": 4.32953143119812,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:SUPPORTS_REGION]->(t:Team) RETURN c.name AS customer, t.name AS team",
            "processed_query": "",
            "execution_time": 0.0015285015106201172,
            "generation_time": 4.32953143119812
          }
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.013125896453857,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.013125896453857
          }
        },
        {
          "query": "Find team leads",
          "model": "codeqwen:7b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.430008172988892,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.430008172988892
          }
        }
      ],
      "timestamp": "2025-06-23T00:32:36.835729"
    },
    {
      "model": "granite-code:8b",
      "available": true,
      "baseline_success_rate": 0.0,
      "improved_success_rate": 0.0,
      "improvement_percentage": 0.0,
      "baseline_results": [
        {
          "query": "Who is the CTO?",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.5338294506073,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "List all teams in the engineering department",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.01830267906189,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.013820171356201,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.955336570739746,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.013495206832886,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017521142959595,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "How many people work in each department?",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.966235160827637,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0183985233306885,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018269300460815,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.947256803512573,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017743110656738,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.020801305770874,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.95219087600708,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0183470249176025,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019939184188843,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.959024429321289,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.014046907424927,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.016486883163452,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Show me the important people",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.976824522018433,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.018027067184448,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019552230834961,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.948200225830078,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0158796310424805,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019192934036255,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.949540615081787,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.0180418491363525,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "Find team leads",
          "model": "granite-code:8b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.019224166870117,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        }
      ],
      "improved_results": [
        {
          "query": "Who is the CTO?",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 0.2210845947265625,
          "generation_error": "HTTP 500",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 0.2210845947265625
          }
        },
        {
          "query": "List all teams in the engineering department",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018178939819336,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018178939819336
          }
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.017383813858032,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.017383813858032
          }
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.015233516693115,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.015233516693115
          }
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.019819498062134,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.019819498062134
          }
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.015079021453857,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.015079021453857
          }
        },
        {
          "query": "How many people work in each department?",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018601179122925,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018601179122925
          }
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018267631530762,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018267631530762
          }
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018222808837891,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018222808837891
          }
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018815994262695,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018815994262695
          }
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018518447875977,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018518447875977
          }
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.019362211227417,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.019362211227417
          }
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018203496932983,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018203496932983
          }
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0181591510772705,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0181591510772705
          }
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018788576126099,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018788576126099
          }
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0185205936431885,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0185205936431885
          }
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.015199899673462,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.015199899673462
          }
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018193006515503,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018193006515503
          }
        },
        {
          "query": "Show me the important people",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.014708995819092,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.014708995819092
          }
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.014477252960205,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.014477252960205
          }
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.0193870067596436,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.0193870067596436
          }
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.019258975982666,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.019258975982666
          }
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.015987873077393,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.015987873077393
          }
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.018820524215698,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.018820524215698
          }
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.017692565917969,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.017692565917969
          }
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.019488573074341,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.019488573074341
          }
        },
        {
          "query": "Find team leads",
          "model": "granite-code:8b",
          "baseline": false,
          "generated_query": null,
          "generation_time": 5.019378185272217,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated",
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "",
            "processed_query": "",
            "execution_time": 0,
            "generation_time": 5.019378185272217
          }
        }
      ],
      "timestamp": "2025-06-23T00:37:11.058860"
    },
    {
      "model": "deepseek-coder:1.3b",
      "available": true,
      "baseline_success_rate": 66.66666666666666,
      "improved_success_rate": 70.37037037037037,
      "improvement_percentage": 3.7037037037037033,
      "baseline_results": [
        {
          "query": "Who is the CTO?",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry;",
          "generation_time": 3.056142568588257,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "List all teams in the engineering department",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WHERE s.category = 'Data' AND hs.proficiency_level IN ['advanced', 'expert'] RETURN p.id, p.name, \n    labels(p) as \"Person\", o.region AS OfficeRegion FROM ALL OTHER VERTEX (v:Team), COLLECT([DISTINCT v]) WHERE ID(t) <> ID(v) WITH t, count(*) as team_counts ORDER BY strategic_customers DESC",
          "generation_time": 2.1632466316223145,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "errMsg: Invalid input '\"': expected an identifier line: 3, column: 18, offset: 340 errCtx:     labels(p) as \"Person\", o.region AS OfficeRegion FROM ALL OTHER VERTEX (v:... errCtxOffset: 17",
          "result_count": 0
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as PrimaryRegion, c.industry as IndustryType",
          "generation_time": 1.1740617752075195,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1078853607177734,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) as average_monthly_revenue RETURN t.name AS teamName , COUNT ( DISTINCT  c )AS customerCount , AVG ( c . mrr )as monthlyRevenue",
          "generation_time": 1.3582584857940674,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "WITH clause projections must be aliased",
          "result_count": 0
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WHERE s.category = 'Data' AND hs.proficiency_level IN ['advanced', 'expert'] RETURN p.id, p.name, \n    labels(p) as labels LIMIT 25;",
          "generation_time": 1.7451865673065186,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "'hs' not defined",
          "result_count": 0
        },
        {
          "query": "How many people work in each department?",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id AS ClientID, c.name as CustomerName , c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, labels(c)",
          "generation_time": 1.1476244926452637,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1022415161132812,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.0993258953094482,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.096472978591919,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1047794818878174,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WITH p, s, o, count(*) as teamwork RETURN t.name AS TeamName , strategic_customers, totalteamwork;",
          "generation_time": 1.6075778007507324,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "'t' not defined",
          "result_count": 0
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WITH p, s, o, count(*) as teamwork RETURN t.name AS TeamName , strategic_customers, totalteamwork;",
          "generation_time": 1.6120343208312988,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "'t' not defined",
          "result_count": 0
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, c.industry as IndustryType",
          "generation_time": 1.157616138458252,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) as averageRevenue MATCH (p:Person)-[hs:HAS_SKILL {proficiencyLevel : 'expert'}]->(s:Skill){category:'Data'} WHERE hs.skills = s WITH p, count(DISTinct c), avg(c.annualValue) as averageAnnualRevenue MATCH (t)-[:SUPPORTS_REGION]->(o:Office {timezone : 'Asia/Tokyo'}) WHERE o.officeType = \"Business\" WITH t, count(DISTINCT c), avg(c.dataVolumeGB) as averageDataProcessing MATCH (t)-[:SUPPORTS_REGION]->(o:Office {timezone : 'Asia/Tokyo'}) WHERE o.officeType = \"Business\" WITH t, count(DISTINCT c), avg(c.dataVolumeGB) as averageDataProcessing MATCH (t)-[:SUPPORTS",
          "generation_time": 2.6311914920806885,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "errMsg: Invalid input '{': expected '<', '-', ',', USING INDEX, USING JOIN ON, USING SCAN, WHERE, ';', call clause or a clause line: 1, column: 204, offset: 203 errCtx: ...ficiencyLevel : 'expert'}]->(s:Skill){category:'Data'} WHERE hs.skills = s... errCtxOffset: 40",
          "result_count": 0
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WHERE s.category = 'Data' AND hs.proficiency_level IN ['advanced', 'expert'] RETURN p.id, p.name, \n    o.region as office_location ORDER BY strategic_customers DESC;",
          "generation_time": 1.793100357055664,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "'hs' not defined",
          "result_count": 0
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id AS ClientID, c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, c.industry as IndustryType",
          "generation_time": 1.1822268962860107,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry;",
          "generation_time": 1.0425302982330322,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Show me the important people",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1078126430511475,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WITH p, s, o, count(*) as work_count RETURN t.name AS teamName, strategic_customers, work_count ORDER BY strategycust",
          "generation_time": 1.6795942783355713,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "'t' not defined",
          "result_count": 0
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, c.industry as IndustryType",
          "generation_time": 1.1671223640441895,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1102707386016846,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1012589931488037,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 2.0402984619140625,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1099462509155273,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry;",
          "generation_time": 1.0434205532073975,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4
        },
        {
          "query": "Find team leads",
          "model": "deepseek-coder:1.3b",
          "baseline": true,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) AS average_monthly_revenue RETURN t.name as teamName, COUNT(DISTINCT C) as customerCount, AVG(C.MRR) as AvgMonthRevenue ORDER BY AVGMONTHREVENUE DESC",
          "generation_time": 1.4586350917816162,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "WITH clause projections must be aliased",
          "result_count": 0
        }
      ],
      "improved_results": [
        {
          "query": "Who is the CTO?",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client) WHERE c.primary_region = 'APAC' OR ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/') RETURN c.id AS clientID, c.name AS customerName;  // Output ONLY the Cypher query on one line",
          "processed_query": "MATCH (c:Client) WHERE c.primary_region = 'APAC' OR ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/') RETURN c.id AS clientID, c.name AS customerName",
          "generation_time": 2.1184964179992676,
          "syntax_valid": true,
          "execution_success": false,
          "execution_error": "Type mismatch: expected List or Null but was String",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'ANY()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [],
            "post_processing_applied": true,
            "original_query": "MATCH (c:Client) WHERE c.primary_region = 'APAC' OR ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/') RETURN c.id AS clientID, c.name AS customerName;  // Output ONLY the Cypher query on one line",
            "processed_query": "MATCH (c:Client) WHERE c.primary_region = 'APAC' OR ANY(tz IN c.time_zone_preferences WHERE tz STARTS WITH 'Asia/') RETURN c.id AS clientID, c.name AS customerName",
            "execution_time": 0.0013599395751953125,
            "generation_time": 2.1184964179992676
          }
        },
        {
          "query": "List all teams in the engineering department",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) AS average_monthly_revenue RETURN t.name as teamName, COUNT(DISTINCT C) as customerCount, AVG(C.MRR) as AvgMonthRevenue ORDER BY AVGMONTHREVENUE DESC",
          "processed_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) AS average_monthly_revenue RETURN t.name as teamName, COUNT(DISTINCT C) as customerCount, AVG(C.MRR) as AvgMonthRevenue ORDER BY AVGMONTHREVENUE DESC",
          "generation_time": 1.4599254131317139,
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "WITH clause projections must be aliased",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'COUNT()'. Ensure it's available in FalkorDB.",
              "Unknown function 'AVG()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [
              "Undefined variables: C, c"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) AS average_monthly_revenue RETURN t.name as teamName, COUNT(DISTINCT C) as customerCount, AVG(C.MRR) as AvgMonthRevenue ORDER BY AVGMONTHREVENUE DESC",
            "processed_query": "",
            "execution_time": 0.0012364387512207031,
            "generation_time": 1.4599254131317139
          }
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client) WHERE c.data_volume_gb > 10000 RETURN c.id, c.name, c.industry, c.data_volume_gb, c.support_tier, c.primary_region;",
          "processed_query": "MATCH (c:Client) WHERE c.data_volume_gb > 10000 RETURN c.id, c.name, c.industry, c.data_volume_gb, c.support_tier, c.primary_region",
          "generation_time": 1.0686917304992676,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 14,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": true,
            "original_query": "MATCH (c:Client) WHERE c.data_volume_gb > 10000 RETURN c.id, c.name, c.industry, c.data_volume_gb, c.support_tier, c.primary_region;",
            "processed_query": "MATCH (c:Client) WHERE c.data_volume_gb > 10000 RETURN c.id, c.name, c.industry, c.data_volume_gb, c.support_tier, c.primary_region",
            "execution_time": 0.0017483234405517578,
            "generation_time": 1.0686917304992676
          }
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry;",
          "processed_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry",
          "generation_time": 1.036712646484375,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": true,
            "original_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry;",
            "processed_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry",
            "execution_time": 0.0013782978057861328,
            "generation_time": 1.036712646484375
          }
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id AS ClientID , c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, labels(c)",
          "processed_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id AS ClientID , c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, labels(c)",
          "generation_time": 1.1436636447906494,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id AS ClientID , c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, labels(c)",
            "processed_query": "",
            "execution_time": 0.001461029052734375,
            "generation_time": 1.1436636447906494
          }
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.0970854759216309,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.0012676715850830078,
            "generation_time": 1.0970854759216309
          }
        },
        {
          "query": "How many people work in each department?",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) as averageRevenue MATCH (p:Person)-[hs:HAS_SKILL {proficiencyLevel : 'expert'}]->(s:Skill), \n    (p)-[:WORKS_AT]->(o:Office {timezone STARTS WITH 'Asia/Tokyo'}) WHERE s.category =~ 'Data' RETURN p.id, p.name AS name, o.region as region ORDER BY averageRevenue DESC",
          "processed_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) as averageRevenue MATCH (p:Person)-[hs:HAS_SKILL {proficiencyLevel : 'expert'}]->(s:Skill), \n    (p)-[:WORKS_AT]->(o:Office {timezone STARTS WITH 'Asia/Tokyo'}) WHERE s.category =~ 'Data' RETURN p.id, p.name AS name, o.region as region ORDER BY averageRevenue DESC",
          "generation_time": 1.8121371269226074,
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "errMsg: Invalid input 'S': expected ':' line: 2, column: 42, offset: 247 errCtx: ...(p)-[:WORKS_AT]->(o:Office {timezone STARTS WITH 'Asia/Tokyo'}) WHERE s.ca... errCtxOffset: 40",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: c, o, s"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) as averageRevenue MATCH (p:Person)-[hs:HAS_SKILL {proficiencyLevel : 'expert'}]->(s:Skill), \n    (p)-[:WORKS_AT]->(o:Office {timezone STARTS WITH 'Asia/Tokyo'}) WHERE s.category =~ 'Data' RETURN p.id, p.name AS name, o.region as region ORDER BY averageRevenue DESC",
            "processed_query": "",
            "execution_time": 0.0012545585632324219,
            "generation_time": 1.8121371269226074
          }
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WITH p, s, o WHERE NOT EXISTS((SELECT t FROM Team AS a JOIN a.members as m ON id(m)=id(t))) AND ((s.category = \"Data\" OR (NOT exists((select * from sys.objects where type_desc like '%function%') limit 1)) ) RETURN p, s",
          "processed_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WITH p, s, o WHERE NOT EXISTS((SELECT t FROM Team AS a JOIN a.members as m ON id(m)=id(t))) AND ((s.category = \"Data\" OR (NOT exists((select * from sys.objects where type_desc like '%function%') limit 1)) ) RETURN p, s",
          "generation_time": 1.9031906127929688,
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "errMsg: Invalid input 't': expected a label, '{', a parameter, ')', '.', '(', AND, OR, XOR, NOT, '=~', '=', '<>', '+', '-', '*', '/', '%', '^', IN, CONTAINS, STARTS WITH, ENDS WITH, '<=', '>=', '<', '>', IS NULL, IS NOT NULL or '[' line: 2, column: 96, offset: 262 errCtx: ...ITH p, s, o WHERE NOT EXISTS((SELECT t FROM Team AS a JOIN a.members as m ... errCtxOffset: 40",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'EXISTS()'. Ensure it's available in FalkorDB.",
              "Unknown function 'AND()'. Ensure it's available in FalkorDB.",
              "Unknown function 'OR()'. Ensure it's available in FalkorDB.",
              "Unknown function 'exists()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [
              "Undefined variables: a, sys",
              "Unclosed '(' at position 320"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WITH p, s, o WHERE NOT EXISTS((SELECT t FROM Team AS a JOIN a.members as m ON id(m)=id(t))) AND ((s.category = \"Data\" OR (NOT exists((select * from sys.objects where type_desc like '%function%') limit 1)) ) RETURN p, s",
            "processed_query": "",
            "execution_time": 0.001310586929321289,
            "generation_time": 1.9031906127929688
          }
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.108752727508545,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.001196146011352539,
            "generation_time": 1.108752727508545
          }
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WHERE s.category = 'Data' AND hs.proficiency_level IN ['advanced', 'expert'] RETURN p.id, p.name, \n    labels(p) as \"Person\", o.region AS OfficeRegion FROM ALL OTHER VERTEX (v:Team), COLLECT([DISTINCT v]) WHERE ID(t) <> ID(v) WITH t, count(*) -1 as team_count RETURN \n    labels(t) as \"Strategic Team\", strategic_customers AS CustomersSupportingTierInTokyo FROM ALL OTHER VERTEX (w:Team), COLLECT([DISTINCT w]) WHERE ID(c) <> ID(w) WITH t, count(*)-1 \n    as team_count RETURN labels(t) as \"Strategic Team\", strategic_customers AS CustomersSupport",
          "processed_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WHERE s.category = 'Data' AND hs.proficiency_level IN ['advanced', 'expert'] RETURN p.id, p.name, \n    labels(p) as \"Person\", o.region AS OfficeRegion FROM ALL OTHER VERTEX (v:Team), COLLECT([DISTINCT v]) WHERE ID(t) <> ID(v) WITH t, count(*) -1 as team_count RETURN \n    labels(t) as \"Strategic Team\", strategic_customers AS CustomersSupportingTierInTokyo FROM ALL OTHER VERTEX (w:Team), COLLECT([DISTINCT w]) WHERE ID(c) <> ID(w) WITH t, count(*)-1 \n    as team_count RETURN labels(t) as \"Strategic Team\", strategic_customers AS CustomersSupport",
          "generation_time": 2.809438467025757,
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "errMsg: Invalid input '\"': expected an identifier line: 3, column: 18, offset: 340 errCtx:     labels(p) as \"Person\", o.region AS OfficeRegion FROM ALL OTHER VERTEX (v:... errCtxOffset: 17",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'VERTEX()'. Ensure it's available in FalkorDB.",
              "Unknown function 'COLLECT()'. Ensure it's available in FalkorDB.",
              "Unknown function 'ID()'. Ensure it's available in FalkorDB.",
              "Unknown function 'ID()'. Ensure it's available in FalkorDB.",
              "Unknown function 'VERTEX()'. Ensure it's available in FalkorDB.",
              "Unknown function 'COLLECT()'. Ensure it's available in FalkorDB.",
              "Unknown function 'ID()'. Ensure it's available in FalkorDB.",
              "Unknown function 'ID()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [
              "Undefined variables: hs, o, s"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c) as strategic_customers MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), \n    (p)-[:WORKS_AT]-(o:Office {timezone : 'Asia/Tokyo'}) WHERE s.category = 'Data' AND hs.proficiency_level IN ['advanced', 'expert'] RETURN p.id, p.name, \n    labels(p) as \"Person\", o.region AS OfficeRegion FROM ALL OTHER VERTEX (v:Team), COLLECT([DISTINCT v]) WHERE ID(t) <> ID(v) WITH t, count(*) -1 as team_count RETURN \n    labels(t) as \"Strategic Team\", strategic_customers AS CustomersSupportingTierInTokyo FROM ALL OTHER VERTEX (w:Team), COLLECT([DISTINCT w]) WHERE ID(c) <> ID(w) WITH t, count(*)-1 \n    as team_count RETURN labels(t) as \"Strategic Team\", strategic_customers AS CustomersSupport",
            "processed_query": "",
            "execution_time": 0.001312255859375,
            "generation_time": 2.809438467025757
          }
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) as averageRevenue ORDER BY averageRevenue DESC",
          "processed_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) as averageRevenue ORDER BY averageRevenue DESC",
          "generation_time": 1.122828483581543,
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "Query cannot conclude with WITH (must be a RETURN clause, an update clause, a procedure call or a non-returning subquery)",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Query must have a RETURN clause",
              "Undefined variables: c"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) as averageRevenue ORDER BY averageRevenue DESC",
            "processed_query": "",
            "execution_time": 0.0014166831970214844,
            "generation_time": 1.122828483581543
          }
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 2.0825936794281006,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.001291036605834961,
            "generation_time": 2.0825936794281006
          }
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry;",
          "processed_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry",
          "generation_time": 1.0281126499176025,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": true,
            "original_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry;",
            "processed_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry",
            "execution_time": 0.0013947486877441406,
            "generation_time": 1.0281126499176025
          }
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1077766418457031,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.0011897087097167969,
            "generation_time": 1.1077766418457031
          }
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry;",
          "processed_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry",
          "generation_time": 1.0330886840820312,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": true,
            "original_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry;",
            "processed_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id, c.name, c.mrr, c.annual_value, c.primary_region, c.industry",
            "execution_time": 0.0012257099151611328,
            "generation_time": 1.0330886840820312
          }
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1103086471557617,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.0019428730010986328,
            "generation_time": 1.1103086471557617
          }
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.111816644668579,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.00146484375,
            "generation_time": 1.111816644668579
          }
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, c.industry as IndustryType",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, c.industry as IndustryType",
          "generation_time": 1.164555311203003,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, c.industry as IndustryType",
            "processed_query": "",
            "execution_time": 0.0014069080352783203,
            "generation_time": 1.164555311203003
          }
        },
        {
          "query": "Show me the important people",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1116321086883545,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.0011360645294189453,
            "generation_time": 1.1116321086883545
          }
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) AS average_monthly_revenue RETURN t.name as teamName, COUNT(DISTINCT C) as customerCount, AVG(C.MRR) as AvgMonthRevenue ORDER BY AVGMONTHREVENUE DESC",
          "processed_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) AS average_monthly_revenue RETURN t.name as teamName, COUNT(DISTINCT C) as customerCount, AVG(C.MRR) as AvgMonthRevenue ORDER BY AVGMONTHREVENUE DESC",
          "generation_time": 1.462007999420166,
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "WITH clause projections must be aliased",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [
              "Unknown function 'COUNT()'. Ensure it's available in FalkorDB.",
              "Unknown function 'AVG()'. Ensure it's available in FalkorDB."
            ],
            "validation_errors": [
              "Undefined variables: C, c"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) AS average_monthly_revenue RETURN t.name as teamName, COUNT(DISTINCT C) as customerCount, AVG(C.MRR) as AvgMonthRevenue ORDER BY AVGMONTHREVENUE DESC",
            "processed_query": "",
            "execution_time": 0.0011982917785644531,
            "generation_time": 1.462007999420166
          }
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) AS averageRevenue ORDER BY averageRevenue DESC",
          "processed_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) AS averageRevenue ORDER BY averageRevenue DESC",
          "generation_time": 1.130786657333374,
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "Query cannot conclude with WITH (must be a RETURN clause, an update clause, a procedure call or a non-returning subquery)",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Query must have a RETURN clause",
              "Undefined variables: c"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (t:Team {support_tier : 'Strategic'})-[:SUPPORTS_REGION]->(c:Client) WITH t, count(DISTINCT c), avg(c.mrr) AS averageRevenue ORDER BY averageRevenue DESC",
            "processed_query": "",
            "execution_time": 0.0012841224670410156,
            "generation_time": 1.130786657333374
          }
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1167101860046387,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.0014340877532958984,
            "generation_time": 1.1167101860046387
          }
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1023261547088623,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.0012166500091552734,
            "generation_time": 1.1023261547088623
          }
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.111994743347168,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.0012505054473876953,
            "generation_time": 1.111994743347168
          }
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1157307624816895,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.0012433528900146484,
            "generation_time": 1.1157307624816895
          }
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id AS ClientID , c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, labels(c)",
          "processed_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id AS ClientID , c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, labels(c)",
          "generation_time": 1.1580650806427002,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client  {support_tier: 'Strategic'}) RETURN c.id AS ClientID , c.name as CustomerName, c.mrr as MonthlyRevenue, c.annual_value as AnnualValue, c.primary_region as PrimaryRegion, labels(c)",
            "processed_query": "",
            "execution_time": 0.0015766620635986328,
            "generation_time": 1.1580650806427002
          }
        },
        {
          "query": "Find team leads",
          "model": "deepseek-coder:1.3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "processed_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
          "generation_time": 1.1058008670806885,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 4,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client {support_tier:'Strategic'}) RETURN c.id AS ClientID, c.name AS CustomerName, c.mrr AS MonthlyRevenue, c.annual_value AS AnnualValue, c.primary_region as RegionTier",
            "processed_query": "",
            "execution_time": 0.001270294189453125,
            "generation_time": 1.1058008670806885
          }
        }
      ],
      "timestamp": "2025-06-23T00:38:25.916241"
    },
    {
      "model": "llama3.2:3b",
      "available": true,
      "baseline_success_rate": 96.29629629629629,
      "improved_success_rate": 100.0,
      "improvement_percentage": 3.7037037037037033,
      "baseline_results": [
        {
          "query": "Who is the CTO?",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": null,
          "generation_time": 5.017265558242798,
          "generation_error": "Timeout",
          "syntax_valid": false,
          "execution_success": false,
          "execution_error": "No query generated"
        },
        {
          "query": "List all teams in the engineering department",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8746438026428223,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8728375434875488,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "generation_time": 1.8717942237854004,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8736705780029297,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'in_progress' RETURN c.id, t.name, count(DISTINCT p) as project_count",
          "generation_time": 2.818950653076172,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "How many people work in each department?",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name, labels(c) as client_type ORDER BY c.id LIMIT 25",
          "generation_time": 1.9929938316345215,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND p.status = 'active' RETURN c.id, c.name, t.name, t.department, p.name as project ORDER BY c.id",
          "generation_time": 1.923983097076416,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND t.name IN ['Customer Success', 'Data Science'] RETURN p.name as project, t.name as team, c.name as client, c.tier, labels(p) as project_labels ORDER BY c.tier",
          "generation_time": 2.0982742309570312,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
          "generation_time": 2.6331725120544434,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8706347942352295,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8755898475646973,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8642997741699219,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8841724395751953,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND t.name IN ['Customer Success', 'Data Science'] RETURN p.name as project, t.name as team, count(c) as client_count",
          "generation_time": 1.9351084232330322,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "generation_time": 1.8621432781219482,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "generation_time": 1.877640962600708,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "generation_time": 1.8620586395263672,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Show me the important people",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN c.id, t.name, t.department, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.894897699356079,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.name IN ['Data Science', 'Product Management'] RETURN c.id, p.name, t.name, r.name",
          "generation_time": 1.871490478515625,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8671488761901855,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.name IN ['Data Science', 'Product Management'] RETURN c.id, p.name, t.name, r.name",
          "generation_time": 1.8795721530914307,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8881726264953613,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)<-[:SUPPORTS_REGION]-(c) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN c.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.864088773727417,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND p.status = 'active' RETURN c.id, c.name, t.name, t.department, p.name as project ORDER BY c.id LIMIT 25",
          "generation_time": 1.9675014019012451,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8822641372680664,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        },
        {
          "query": "Find team leads",
          "model": "llama3.2:3b",
          "baseline": true,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, count(DISTINCT c) as strategic_customers ORDER BY strategic_customers DESC",
          "generation_time": 1.9695582389831543,
          "syntax_valid": true,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0
        }
      ],
      "improved_results": [
        {
          "query": "Who is the CTO?",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
          "generation_time": 0.9052042961120605,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
            "processed_query": "",
            "execution_time": 0.0016629695892333984,
            "generation_time": 0.9052042961120605
          }
        },
        {
          "query": "List all teams in the engineering department",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.878478765487671,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
            "processed_query": "",
            "execution_time": 0.0013282299041748047,
            "generation_time": 1.878478765487671
          }
        },
        {
          "query": "Find employees in the Berlin office",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "generation_time": 1.869248390197754,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, r, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
            "processed_query": "",
            "execution_time": 0.0015261173248291016,
            "generation_time": 1.869248390197754
          }
        },
        {
          "query": "Show me senior engineers with Python and React skills",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.879852533340454,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
            "processed_query": "",
            "execution_time": 0.0012509822845458984,
            "generation_time": 1.879852533340454
          }
        },
        {
          "query": "Find all critical security policies updated this year",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.name IN ['Data Science', 'Product Management'] RETURN c.id, p.name, t.name, r.name",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.name IN ['Data Science', 'Product Management'] RETURN c.id, p.name, t.name, r.name",
          "generation_time": 1.8725190162658691,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, r, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.name IN ['Data Science', 'Product Management'] RETURN c.id, p.name, t.name, r.name",
            "processed_query": "",
            "execution_time": 0.0014023780822753906,
            "generation_time": 1.8725190162658691
          }
        },
        {
          "query": "Which teams have more than 10 members?",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8845741748809814,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
            "processed_query": "",
            "execution_time": 0.0014443397521972656,
            "generation_time": 1.8845741748809814
          }
        },
        {
          "query": "How many people work in each department?",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)<-[:SUPPORTS_REGION]-(c) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)<-[:SUPPORTS_REGION]-(c) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
          "generation_time": 1.8726904392242432,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)<-[:SUPPORTS_REGION]-(c) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
            "processed_query": "",
            "execution_time": 0.0014450550079345703,
            "generation_time": 1.8726904392242432
          }
        },
        {
          "query": "What's the average team size across all departments?",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
          "generation_time": 1.8844690322875977,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
            "processed_query": "",
            "execution_time": 0.0015790462493896484,
            "generation_time": 1.8844690322875977
          }
        },
        {
          "query": "Show the distribution of seniority levels by location",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "generation_time": 1.9496088027954102,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, r, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
            "processed_query": "",
            "execution_time": 0.0015783309936523438,
            "generation_time": 1.9496088027954102
          }
        },
        {
          "query": "Find all people who report to someone in the data team",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.name IN ['Data Science', 'Product Management'] RETURN c.id, p.name, t.name",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.name IN ['Data Science', 'Product Management'] RETURN c.id, p.name, t.name",
          "generation_time": 1.8443028926849365,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, r, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.name IN ['Data Science', 'Product Management'] RETURN c.id, p.name, t.name",
            "processed_query": "",
            "execution_time": 0.001466989517211914,
            "generation_time": 1.8443028926849365
          }
        },
        {
          "query": "Which policies affect teams working on customer projects?",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.name as team, collect(p.name) as projects ORDER BY count(p) DESC",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.name as team, collect(p.name) as projects ORDER BY count(p) DESC",
          "generation_time": 1.8917043209075928,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.name as team, collect(p.name) as projects ORDER BY count(p) DESC",
            "processed_query": "",
            "execution_time": 0.0014712810516357422,
            "generation_time": 1.8917043209075928
          }
        },
        {
          "query": "Show me engineers who work with clients in the financial sector",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, count(DISTINCT p) as project_count ORDER BY project_count DESC",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, count(DISTINCT p) as project_count ORDER BY project_count DESC",
          "generation_time": 1.935234785079956,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, count(DISTINCT p) as project_count ORDER BY project_count DESC",
            "processed_query": "",
            "execution_time": 0.0014553070068359375,
            "generation_time": 1.935234785079956
          }
        },
        {
          "query": "What's the reporting chain from junior developers to the CEO?",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
          "generation_time": 2.8809869289398193,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
            "processed_query": "",
            "execution_time": 0.0014832019805908203,
            "generation_time": 2.8809869289398193
          }
        },
        {
          "query": "Find all connections between the security team and compliance policies",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.name IN ['Data Science', 'Product Management'] RETURN c.id, p.name, t.name",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.name IN ['Data Science', 'Product Management'] RETURN c.id, p.name, t.name",
          "generation_time": 1.8361859321594238,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, r, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.name IN ['Data Science', 'Product Management'] RETURN c.id, p.name, t.name",
            "processed_query": "",
            "execution_time": 0.0013637542724609375,
            "generation_time": 1.8361859321594238
          }
        },
        {
          "query": "Show how the product team collaborates with engineering",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8815529346466064,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
            "processed_query": "",
            "execution_time": 0.0017309188842773438,
            "generation_time": 1.8815529346466064
          }
        },
        {
          "query": "Find circular reporting structures (people who indirectly report to themselves)",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)<-[:SUPPORTS_REGION]-(c) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)<-[:SUPPORTS_REGION]-(c) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
          "generation_time": 1.8697052001953125,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)<-[:SUPPORTS_REGION]-(c) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
            "processed_query": "",
            "execution_time": 0.0013575553894042969,
            "generation_time": 1.8697052001953125
          }
        },
        {
          "query": "Which teams have members with skills that no other team has?",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "generation_time": 1.8649206161499023,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, r, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
            "processed_query": "",
            "execution_time": 0.0011816024780273438,
            "generation_time": 1.8649206161499023
          }
        },
        {
          "query": "Identify skill gaps: skills needed by projects but not possessed by allocated team members",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
          "generation_time": 1.9414629936218262,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
            "processed_query": "",
            "execution_time": 0.0011687278747558594,
            "generation_time": 1.9414629936218262
          }
        },
        {
          "query": "Show me the important people",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8619840145111084,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
            "processed_query": "",
            "execution_time": 0.0012466907501220703,
            "generation_time": 1.8619840145111084
          }
        },
        {
          "query": "Find problematic areas in the organization",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND p.status = 'active' RETURN c.id, c.name, t.name, t.department, p.name as project ORDER BY c.id",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND p.status = 'active' RETURN c.id, c.name, t.name, t.department, p.name as project ORDER BY c.id",
          "generation_time": 2.5856220722198486,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, r, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND p.status = 'active' RETURN c.id, c.name, t.name, t.department, p.name as project ORDER BY c.id",
            "processed_query": "",
            "execution_time": 0.0012543201446533203,
            "generation_time": 2.5856220722198486
          }
        },
        {
          "query": "Who should I talk to about AI stuff?",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
          "generation_time": 2.8309133052825928,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, r, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(r:Region) WHERE r.name = 'APAC' AND t.department = 'Customer Success' RETURN c.id, p.name, t.name, r.name ORDER BY c.id",
            "processed_query": "",
            "execution_time": 0.0012066364288330078,
            "generation_time": 2.8309133052825928
          }
        },
        {
          "query": "What's the bus factor for critical projects? (how many people would need to leave to endanger the project)",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8825864791870117,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
            "processed_query": "",
            "execution_time": 0.0012066364288330078,
            "generation_time": 1.8825864791870117
          }
        },
        {
          "query": "Find potential compliance violations: teams without required policy training",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, count(DISTINCT p) as project_count ORDER BY project_count DESC",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, count(DISTINCT p) as project_count ORDER BY project_count DESC",
          "generation_time": 1.9451563358306885,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, count(DISTINCT p) as project_count ORDER BY project_count DESC",
            "processed_query": "",
            "execution_time": 0.0012028217315673828,
            "generation_time": 1.9451563358306885
          }
        },
        {
          "query": "Identify knowledge silos: skills possessed by only one person in a team",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8772566318511963,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
            "processed_query": "",
            "execution_time": 0.0012047290802001953,
            "generation_time": 1.8772566318511963
          }
        },
        {
          "query": "Find people named John or Jon (handle name variations)",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
          "generation_time": 1.8899478912353516,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'Strategic' AND p.status = 'active' RETURN c.id, t.name, p.name as project ORDER BY c.mrr DESC",
            "processed_query": "",
            "execution_time": 0.0010690689086914062,
            "generation_time": 1.8899478912353516
          }
        },
        {
          "query": "What happens if everyone in the data team leaves?",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
          "generation_time": 1.8790159225463867,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, count(DISTINCT c) as enterprise_customers",
            "processed_query": "",
            "execution_time": 0.0012500286102294922,
            "generation_time": 1.8790159225463867
          }
        },
        {
          "query": "Find team leads",
          "model": "llama3.2:3b",
          "baseline": false,
          "generated_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
          "processed_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
          "generation_time": 1.952622652053833,
          "syntax_valid": false,
          "execution_success": true,
          "execution_error": "",
          "result_count": 0,
          "improvements": {
            "function_names_fixed": false,
            "semicolons_removed": false,
            "validation_warnings": [],
            "validation_errors": [
              "Undefined variables: p, t"
            ],
            "post_processing_applied": false,
            "original_query": "MATCH (c:Client)-[:HAS_PROJECT]->(p:Project), (t:Team)-[:SUPPORTS_REGION]->(c:Client) WHERE c.tier = 'enterprise' AND p.status = 'active' RETURN t.id, t.name, t.department, count(c) as enterprise_customers ORDER BY enterprise_customers DESC",
            "processed_query": "",
            "execution_time": 0.0012972354888916016,
            "generation_time": 1.952622652053833
          }
        }
      ],
      "timestamp": "2025-06-23T00:40:14.775556"
    }
  ]
}